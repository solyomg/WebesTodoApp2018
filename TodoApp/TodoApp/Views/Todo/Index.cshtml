@model List<TodoApp.Models.TodoItem>

@*
    Kiegészítettük a View definicióját, hogy képes
    legyen List<string> tipusú adatot fogadni
*@

@{
    ViewBag.Title = "TodoList";
}

<h2>Bevásárlólista</h2>

@*
    mindkét megoldás ugyanoda visz, a második a beépített ASP.NET szolgáltatás,
    nem kell megadni a Controllert, mert tudja, hogy "hol vagyunk"
*@
@Html.ActionLink("Új felvitele", "Create")


@*Kiolvasom a Modelben tárolt információt itt a nézeten*@
@*A megoldás hogy egy ciklussal kiolvassuk a listából az adatokat és úgy írjuk a HTML-t*@

<ul>
    @foreach (var todoitem in Model)
    {
        if (todoitem.Done)
        {
            <li><strike>@Html.ActionLink(todoitem.Name, "Details", new { id = todoitem.Id }) </strike> @Html.ActionLink("Módosítás", "Edit", new { id = todoitem.Id }) @Html.ActionLink("Törlés", "Delete", new { id = todoitem.Id }) </li>
        }
        else
        {
            <li>@Html.ActionLink(todoitem.Name, "Details", new { id = todoitem.Id }) @Html.ActionLink("Módosítás", "Edit", new { id = todoitem.Id }) @Html.ActionLink("Törlés", "Delete", new { id = todoitem.Id }) </li>
        }

    }
</ul>

@using (Html.BeginForm("Create","Todo"))
{
    @Html.TextBox("Name")
    @Html.CheckBox("isDone")
    <button>Mentés</button>

}